function  Rename-TwoArray{

param(
       [parameter(Mandatory=$true)][ValidateNotNullOrEmpty()] [Array]$Array1,
       [parameter(Mandatory=$true)][ValidateNotNullOrEmpty()] [Array]$Array2,
       [switch]$Table


)
<#
.SYNOPSIS
Compare Two Array and find conflict in the properties names.
.DESCRIPTION
Find conflict before merging two array in only one. Rename the property of the second array with prefix "C_"
.PARAMETER Array1
The name of the first Array you want to compare
.PARAMETER Array2
The name of the first Array you want to compare
.PARAMETER Table
Output the result into a Table Format
Merge-TwoArray -Array1 $array1 -array1Property "User" -Array2 $array2 -array2Property "Samaccountname" -Table
.EXAMPLE
Compare Two Array and output the result in a table.
Rename-TwoArray -Array1 $arraY1 -Array2 $array2 -Table
.LINK
Sebastien Maltais
sebastien_maltais@hotmail.com
GIT: https://github.com/uTork/Powershell/
LinkedIn: https://www.linkedin.com/in/sebastienmaltais/
#>

# Extraction of the properties of the array
[array]$array1_properties = ($array1 | Get-member | Where-Object {$_.membertype -eq "Noteproperty"}).name
[array]$array2_properties = ($array2 | Get-member | Where-Object {$_.membertype -eq "Noteproperty"}).name

# Compare the the properties of these array and find equal.
$compare_properties = (Compare-Object -ReferenceObject $array1_properties -DifferenceObject $array2_properties -IncludeEqual | Where-Object {$_.sideindicator -eq "=="}).inputobject

[int]$number_of_properties = $array2_properties.count



$expression = 0..$number_of_properties | foreach {
                                                                $num = $_
                                                                $property = $array2_properties[$num]
                                                                
                                                                foreach($equal in $compare_properties){

                                                                if($property -ne $null){
                                                                if($equal -eq $property){        
                                                                    @{
                                                                        Name       = ('C_{0}' -f $property)
                                                                        expression = [Scriptblock]::Create('$_.{0}' -f $property)
                                                                     }
                                                                     }
                                                                if($equal -ne $property){        
                                                                    @{
                                                                        Name       = ('{0}' -f $property)
                                                                        expression = [Scriptblock]::Create('$_.{0}' -f $property)
                                                                     }
                                                                                           }

                                                                                       }



                                                                
                                                              }
                         }
if($table -eq $true){$array2 | select-object $expression | Format-Table}
if($table -ne $true){$array2 | select-object $expression}


}
